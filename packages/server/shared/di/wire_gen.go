// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"server/application/service"
	service2 "server/domain/service"
	"server/infrastructure/datasource"
	"server/infrastructure/ent"
	"server/presentation/controller"
)

// Injectors from wire.go:

func InitializeControllers() (*ControllersSet, func(), error) {
	client, cleanup, err := ent.ProvideClient()
	if err != nil {
		return nil, nil, err
	}
	boardDatasource := datasource.NewBoardDatasource(client)
	boardApplicationService := service.NewBoardApplicationService(boardDatasource)
	boardController := controller.NewBoardController(boardApplicationService)
	boardDomainService := service2.NewBoardDomainService(boardDatasource)
	threadDatasource := datasource.NewThreadDatasource(client)
	threadDomainService := service2.NewThreadDomainService(threadDatasource)
	boardAdminApplicationService := service.NewBoardAdminApplicationService(boardDatasource, boardDomainService, threadDomainService)
	boardAdminController := controller.NewBoardAdminController(boardAdminApplicationService)
	userDatasource := datasource.NewUserDatasource(client)
	userApplicationService := service.NewUserApplicationService(userDatasource)
	userController := controller.NewUserController(userApplicationService)
	threadApplicationService := service.NewThreadApplicationService(threadDatasource, threadDomainService)
	threadController := controller.NewThreadController(threadApplicationService)
	threadCommentDatasource := datasource.NewThreadCommentDatasource(client)
	threadCommentApplicationService := service.NewThreadCommentApplicationService(threadCommentDatasource)
	threadCommentController := controller.NewThreadCommentController(threadCommentApplicationService)
	controllersSet := &ControllersSet{
		BoardController:         boardController,
		BoardAdminController:    boardAdminController,
		UserController:          userController,
		ThreadController:        threadController,
		ThreadCommentController: threadCommentController,
	}
	return controllersSet, func() {
		cleanup()
	}, nil
}

// wire.go:

var controllerSet = wire.NewSet(controller.NewBoardAdminController, controller.NewBoardController, controller.NewUserController, controller.NewThreadController, controller.NewThreadCommentController)

var applicationServiceSet = wire.NewSet(service.NewBoardAdminApplicationService, service.NewBoardApplicationService, service.NewUserApplicationService, service.NewThreadApplicationService, service.NewThreadCommentApplicationService)

var domainServiceSet = wire.NewSet(service2.NewBoardDomainService, service2.NewUserDomainService, service2.NewThreadDomainService)

var entSet = wire.NewSet(ent.ProvideClient)

var datasourceSet = wire.NewSet(datasource.NewBoardDatasource, datasource.NewUserDatasource, datasource.NewThreadDatasource, datasource.NewThreadCommentDatasource)

type ControllersSet struct {
	BoardController         *controller.BoardController
	BoardAdminController    *controller.BoardAdminController
	UserController          *controller.UserController
	ThreadController        *controller.ThreadController
	ThreadCommentController *controller.ThreadCommentController
}
